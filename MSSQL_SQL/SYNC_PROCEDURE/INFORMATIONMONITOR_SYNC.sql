CREATE PROCEDURE [dbo].pr_INFORMATIONMONITOR_Sync (
@svrName varchar(200),
@svrId int
)
AS
BEGIN
DECLARE @tmpTab TABLE( 
	INFORMATIONMONITORID int,
	MONITORNAME varchar(255),
	UNIQUENAME varchar(255),
	HOST varchar(255),
	PORT int,
	ISDELETED int
)

DECLARE @insSQL varchar(MAX)= 'SELECT * FROM '+ dbo.GET_OPENQUERY_SQL(@svrName,'SELECT INFORMATIONMONITORID,MONITORNAME,UNIQUENAME,HOST,PORT,ISDELETED FROM INFORMATIONMONITOR_LOG WHERE ROWNUM<100 ORDER BY LOGTIME')
INSERT INTO @tmpTab EXEC(@insSQL)

DECLARE @INFORMATIONMONITORID int,@MONITORNAME varchar(255),@UNIQUENAME varchar(255),@HOST varchar(255),@PORT int,@ISDELETED int

DECLARE update_cursor CURSOR FOR 
SELECT INFORMATIONMONITORID,MONITORNAME,UNIQUENAME,HOST,PORT,ISDELETED FROM @tmpTab

OPEN update_cursor

FETCH NEXT FROM update_cursor
INTO @INFORMATIONMONITORID,@MONITORNAME,@UNIQUENAME,@HOST,@PORT,@ISDELETED

WHILE @@FETCH_STATUS = 0
BEGIN	
	UPDATE INFORMATIONMONITOR SET
		MONITORNAME=@MONITORNAME,
		UNIQUENAME=@UNIQUENAME,
		HOST=@HOST,
		PORT=@PORT,
		ISDELETED=@ISDELETED
	WHERE
		SERVERID = @svrId
	AND INFORMATIONMONITORID=@INFORMATIONMONITORID

FETCH NEXT FROM update_cursor
INTO @INFORMATIONMONITORID,@MONITORNAME,@UNIQUENAME,@HOST,@PORT,@ISDELETED

END

DECLARE @delSQL varchar(MAX) = 'DELETE '+ dbo.GET_OPENQUERY_SQL(@svrName,'SELECT * FROM INFORMATIONMONITOR_LOG WHERE ROWNUM < 100')
EXEC(@delSQL)

CLOSE update_cursor
DEALLOCATE update_cursor

END
