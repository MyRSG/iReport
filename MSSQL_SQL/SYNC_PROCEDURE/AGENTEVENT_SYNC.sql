CREATE PROCEDURE [dbo].pr_AGENTEVENT_Sync (
@svrName varchar(200),
@svrId int
)
AS
BEGIN
DECLARE @tmpTab TABLE( 
	AGENTEVENTID int,
	AGENTID int,
	EVENTDATE datetime2,
	CATEGORYSTATUSID int,
	EXTENDEDVALUE varchar(4000),
	ISDELETED int,
	ISLATEST varchar(1)
)

DECLARE @insSQL varchar(MAX)= 'SELECT * FROM '+ dbo.GET_OPENQUERY_SQL(@svrName,'SELECT AGENTEVENTID,AGENTID,EVENTDATE,CATEGORYSTATUSID,EXTENDEDVALUE,ISDELETED,ISLATEST FROM AGENTEVENT_LOG WHERE ROWNUM<100 ORDER BY LOGTIME')
INSERT INTO @tmpTab EXEC(@insSQL)

DECLARE @AGENTEVENTID int,@AGENTID int,@EVENTDATE datetime2,@CATEGORYSTATUSID int,@EXTENDEDVALUE varchar(4000),@ISDELETED int,@ISLATEST varchar(1)

DECLARE update_cursor CURSOR FOR 
SELECT AGENTEVENTID,AGENTID,EVENTDATE,CATEGORYSTATUSID,EXTENDEDVALUE,ISDELETED,ISLATEST FROM @tmpTab

OPEN update_cursor

FETCH NEXT FROM update_cursor
INTO @AGENTEVENTID,@AGENTID,@EVENTDATE,@CATEGORYSTATUSID,@EXTENDEDVALUE,@ISDELETED,@ISLATEST

WHILE @@FETCH_STATUS = 0
BEGIN	
	UPDATE AGENTEVENT SET
		AGENTID=@AGENTID,
		EVENTDATE=@EVENTDATE,
		CATEGORYSTATUSID=@CATEGORYSTATUSID,
		EXTENDEDVALUE=@EXTENDEDVALUE,
		ISDELETED=@ISDELETED,
		ISLATEST=@ISLATEST
	WHERE
		SERVERID = @svrId
	AND AGENTEVENTID=@AGENTEVENTID

FETCH NEXT FROM update_cursor
INTO @AGENTEVENTID,@AGENTID,@EVENTDATE,@CATEGORYSTATUSID,@EXTENDEDVALUE,@ISDELETED,@ISLATEST

END

DECLARE @delSQL varchar(MAX) = 'DELETE '+ dbo.GET_OPENQUERY_SQL(@svrName,'SELECT * FROM AGENTEVENT_LOG WHERE ROWNUM < 100')
EXEC(@delSQL)

CLOSE update_cursor
DEALLOCATE update_cursor

END
